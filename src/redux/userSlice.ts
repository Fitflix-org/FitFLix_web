import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { AuthState, User } from './types';

// Initial state for the authentication slice
const initialState: AuthState = {
  user: null,
  isLoggedIn: false,
};

// Create the user authentication slice
const authSlice = createSlice({
  name: 'auth', // Name of the slice, used as a prefix for action types
  initialState,
  reducers: {
    // Action for user login
    login: (state, action: PayloadAction<User>) => {
      state.user = action.payload; // Set the user data
      state.isLoggedIn = true;     // Set logged in status to true
    },
    // Action for user registration (for this example, it also logs them in)
    register: (state, action: PayloadAction<User>) => {
      state.user = action.payload; // Set the user data
      state.isLoggedIn = true;     // Set logged in status to true
    },
    // Action for user logout
    // Ensure proper immutability in reducers
    logout: (state) => {
      // Clear entire state tree
      Object.keys(state).forEach(key => delete state[key as keyof AuthState]);
      return initialState; // Instead of mutating
    },
  },
});

// Export the actions generated by createSlice
export const { login, register, logout } = authSlice.actions;

// Export the reducer function
export default authSlice.reducer;